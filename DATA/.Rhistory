geom_errorbar( aes(ymin=Lower.CL.x, ymax=Upper.CL.x), width=0.3 ) +
scale_y_reverse() +
ylim(mymax, 0) +
coord_flip() +
scale_fill_viridis(discrete=TRUE) +
theme_classic() +
ylab("Hazard Ratio")
mymax
tmp$Upper.CL.x
# Maximum?
mymax=max(c(tmp$Upper.CL.x, tmp$Upper.CL.y), na.rm=T)
mymax
# Step 1: compute position for beeswarm plot
library(beeswarm)
install.packages('beeswarm')
# Step 1: compute position for beeswarm plot
library(beeswarm)
data <- read.table("data.csv", header=T)
data
getwd()
setwd("/Users/y.holtz/Dropbox/QBI/22_WORLD_HEALTH_SURVEY/Como-in-World-Heath-Survey/DATA")
data <- read.table("data.csv", header=T)
data <- read.table("data.csv", header=T, sep=",")
data
data$pair <- paste(data$Prior_disorder, data$Later_disorder, sep="-")
beeswarm(HR~pair, data=data)
beeswarm(H, data=data)
beeswarm(HR, data=data)
beeswarm(data$HR)
beeswarm(data$HR)
beeswarm(log(data$HR))
beeswarm(log(data$HR), method="center")
beeswarm(log(data$HR), method="center", cex=5)
beeswarm(log(data$HR), method="center", cex=4)
beeswarm(log(data$HR), method="center", cex=3)
beeswarm(log(data$HR), method="center", cex=2)
beeswarm(log(data$HR), method="center", cex=1)
beeswarm(log(data$HR), method="center", cex=1, corral="none")
beeswarm(log(data$HR), method="center", cex=1, corral="none", plot=F)
beeswarm(log(data$HR), method="center", cex=1, corral="none", draw=F)
a = beeswarm(log(data$HR), method="center", cex=1, corral="none", draw=F)
a
# Step 1: compute position for dotplot histogram
data <- read.table("data.csv", header=T, sep=",")
data %>%
arrange(HR) %>%
mutate(HR_rounded = (HR+1) - ( (HR+1) %%2 ) )
# A script that takes data from Carmen and transform it for the web application
library(tidyverse)
data %>%
arrange(HR) %>%
mutate(HR_rounded = (HR+1) - ( (HR+1) %%2 ) )
ata %>%
arrange(HR) %>%
mutate(HR_rounded = (HR+1) - ( (HR+1) %%2 ) ) %>%
mutate(y=ave(HR_rounded, HR_rounded, FUN=seq_along))
data %>%
arrange(HR) %>%
mutate(HR_rounded = (HR+1) - ( (HR+1) %%2 ) ) %>%
mutate(y=ave(HR_rounded, HR_rounded, FUN=seq_along))
don = data %>%
arrange(HR) %>%
mutate(HR_rounded = (HR+1) - ( (HR+1) %%2 ) ) %>%
mutate(y=ave(HR_rounded, HR_rounded, FUN=seq_along))
p=ggplot(don, aes(x=HR_rounded, y=y) ) +
geom_point( aes(text=text), size=5, color=mycolor ) +
xlab('Hazard Ratio') +
ylab('Number of pair of mental disorder') +
ylim(1,18) +
xlim(0,70) +
geom_vline(aes(xintercept = 1), color="grey", linetype="dashed") +
geom_text(  x=3, y=17, label="HR=1", color="grey") +
theme_classic() +
theme(
legend.position="none",
axis.line.y = element_blank(),
axis.text=element_text(size=15)
)
p=ggplot(don, aes(x=HR_rounded, y=y) ) +
geom_point( aes(text=text), size=5, color="blue" ) +
xlab('Hazard Ratio') +
ylab('Number of pair of mental disorder') +
ylim(1,18) +
xlim(0,70) +
geom_vline(aes(xintercept = 1), color="grey", linetype="dashed") +
geom_text(  x=3, y=17, label="HR=1", color="grey") +
theme_classic() +
theme(
legend.position="none",
axis.line.y = element_blank(),
axis.text=element_text(size=15)
)
p
p=ggplot(don, aes(x=HR_rounded, y=y) ) +
geom_point( size=5, color="blue" ) +
xlab('Hazard Ratio') +
ylab('Number of pair of mental disorder') +
ylim(1,18) +
xlim(0,70) +
geom_vline(aes(xintercept = 1), color="grey", linetype="dashed") +
theme_classic() +
theme(
legend.position="none",
axis.line.y = element_blank(),
axis.text=element_text(size=15)
)
p
p=ggplot(don, aes(x=HR_rounded, y=y) ) +
geom_point( size=5, color="blue" ) +
xlab('Hazard Ratio') +
ylab('Number of pair of mental disorder') +
geom_vline(aes(xintercept = 1), color="grey", linetype="dashed") +
theme_classic() +
theme(
legend.position="none",
axis.line.y = element_blank(),
axis.text=element_text(size=15)
)
p
ggplot(don, aes(x=HR_rounded, y=y) ) +
geom_point( size=5, color="blue" ) +
xlab('Hazard Ratio') +
ylab('Number of pair of mental disorder') +
geom_vline(aes(xintercept = 1), color="grey", linetype="dashed") +
theme_classic() +
theme(
legend.position="none",
axis.line.y = element_blank(),
axis.text=element_text(size=15)
)
ggplot(don, aes(x=HR_rounded, y=y) ) +
geom_point( size=1, color="blue" ) +
xlab('Hazard Ratio') +
ylab('Number of pair of mental disorder') +
geom_vline(aes(xintercept = 1), color="grey", linetype="dashed") +
theme_classic() +
theme(
legend.position="none",
axis.line.y = element_blank(),
axis.text=element_text(size=15)
)
ggplot(don, aes(x=HR_rounded, y=y) ) +
geom_point( size=2, color="blue" ) +
xlab('Hazard Ratio') +
ylab('Number of pair of mental disorder') +
geom_vline(aes(xintercept = 1), color="grey", linetype="dashed") +
theme_classic() +
theme(
legend.position="none",
axis.line.y = element_blank(),
axis.text=element_text(size=15)
)
HR=12.8
(HR+1) %%2
HR=12.8
(HR+1) - (HR+1) %% 2
HR=12.1
(HR+1) - (HR+1) %% 2
HR=12.1
(HR+1) - (HR+1) %% 2
HR=12
(HR+1) - (HR+1) %% 2
HR=12.99
(HR+1) - (HR+1) %% 2
don = data %>%
arrange(HR) %>%
mutate(HR_rounded = round(HR,1) ) %>%
mutate(y=ave(HR_rounded, HR_rounded, FUN=seq_along))
ggplot(don, aes(x=HR_rounded, y=y) ) +
geom_point( size=2, color="blue" ) +
xlab('Hazard Ratio') +
ylab('Number of pair of mental disorder') +
geom_vline(aes(xintercept = 1), color="grey", linetype="dashed") +
theme_classic() +
theme(
legend.position="none",
axis.line.y = element_blank(),
axis.text=element_text(size=15)
)
ggplot(don, aes(x=HR_rounded, y=y) ) +
geom_point( size=2, color="blue" ) +
xlab('Hazard Ratio') +
ylab('Number of pair of mental disorder') +
theme_classic() +
theme(
legend.position="none",
axis.line.y = element_blank(),
)
don
ggplot(don, aes(x=HR_rounded, y=y) ) +
geom_point( size=2, color="blue" ) +
xlab('Hazard Ratio') +
ylab('Number of pair of mental disorder') +
scale_x_log10() +
theme_classic() +
theme(
legend.position="none",
axis.line.y = element_blank(),
)
a = 12.3
round(a/0.2)*0.2
a = 12.23
round(a/0.2)*0.2
don = data %>%
arrange(HR) %>%
mutate(HR_rounded = round(HR/0.2)*0.2 ) %>%
mutate(y=ave(HR_rounded, HR_rounded, FUN=seq_along))
ggplot(don, aes(x=HR_rounded, y=y) ) +
geom_point( size=2, color="blue" ) +
xlab('Hazard Ratio') +
ylab('Number of pair of mental disorder') +
scale_x_log10() +
theme_classic() +
theme(
legend.position="none",
axis.line.y = element_blank(),
)
ggplot(don, aes(x=HR_rounded, y=y) ) +
geom_point( size=2, color="blue" ) +
xlab('Hazard Ratio') +
ylab('Number of pair of mental disorder') +
#scale_x_log10() +
theme_classic() +
theme(
legend.position="none",
axis.line.y = element_blank(),
)
ggplot(don, aes(x=HR_rounded, y=y) ) +
geom_point( size=2, color="blue" ) +
xlab('Hazard Ratio') +
ylab('Number of pair of mental disorder') +
#scale_x_log10() +
theme_classic() +
theme(
legend.position="none",
axis.line.y = element_blank(),
) +
xlim(0,50)
don
maxmax = max(data$y)
maxmax = max(data$y, na.rm=T)
maxmax = max( don$y, na.rm=T)
maxmax
milieu = max( don$y, na.rm=T) / 2
milieu
# Max of each category?
don %>% group_by(y) %>% summarize(max=n())
# Max of each category?
tmp <- don %>% group_by(y) %>% summarize(nbObs=n())
tmp
# Max of each category?
tmp <- don %>% group_by(HR) %>% summarize(nbObs=n())
tmp
# Max of each category?
tmp <- don %>% group_by(HR_rounded) %>% summarize(nbObs=n())
tmp
merge(don, tmp, by.x="HR_rounded", by.y="HR_rounded")
don$yPrim <- milieu - don$nbObs + y
don$yPrim <- milieu - don$nbObs + don$y
don <- don %>% mutate( yPrim = milieu - nbObs + y )
# Step 1: compute position for dotplot histogram
data <- read.table("data.csv", header=T, sep=",")
don = data %>%
arrange(HR) %>%
mutate(HR_rounded = round(HR/0.2)*0.2 ) %>%
mutate(y=ave(HR_rounded, HR_rounded, FUN=seq_along))
don
# Max tot
milieu = max( don$y, na.rm=T) / 2
# Max of each category?
tmp <- don %>% group_by(HR_rounded) %>% summarize(nbObs=n())
tmp
don <- merge(don, tmp, by.x="HR_rounded", by.y="HR_rounded")
don
don <- don %>% mutate( yPrim = milieu - nbObs + y )
don
ggplot(don, aes(x=HR_rounded, y=yPrim) ) +
geom_point( size=2, color="blue" ) +
xlab('Hazard Ratio') +
ylab('Number of pair of mental disorder') +
#scale_x_log10() +
theme_classic() +
theme(
legend.position="none",
axis.line.y = element_blank(),
) +
xlim(0,50)
# Step 1: compute position for dotplot histogram
data <- read.table("data.csv", header=T, sep=",")
don = data %>%
arrange(HR) %>%
mutate(HR_rounded = round(HR/0.2)*0.2 ) %>%
mutate(y=ave(HR_rounded, HR_rounded, FUN=seq_along))
don
don %>% head
# Max tot
milieu = max( don$y, na.rm=T) / 2
milieu
ggplot(don, aes(x=HR_rounded, y=yPrim) ) +
geom_point( size=2, color="blue" ) +
xlab('Hazard Ratio') +
ylab('Number of pair of mental disorder') +
#scale_x_log10() +
theme_classic() +
theme(
legend.position="none",
axis.line.y = element_blank()
)
# Step 1: compute position for dotplot histogram
data <- read.table("data.csv", header=T, sep=",")
don = data %>%
arrange(HR) %>%
mutate(HR_rounded = round(HR/0.2)*0.2 ) %>%
mutate(y=ave(HR_rounded, HR_rounded, FUN=seq_along))
don %>% head
# Max tot
milieu = max( don$y, na.rm=T) / 2
# Max of each category?
tmp <- don %>% group_by(HR_rounded) %>% summarize(nbObs=n())
tmp
don <- merge(don, tmp, by.x="HR_rounded", by.y="HR_rounded")
don
don <- don %>% mutate( yPrim = milieu - nbObs + y )
ggplot(don, aes(x=HR_rounded, y=yPrim) ) +
geom_point( size=2, color="blue" ) +
xlab('Hazard Ratio') +
ylab('Number of pair of mental disorder') +
#scale_x_log10() +
theme_classic() +
theme(
legend.position="none",
axis.line.y = element_blank()
)
ggplot(don, aes(x=HR_rounded, y=yPrim) ) +
geom_point( size=2, color="blue" ) +
xlab('Hazard Ratio') +
ylab('Number of pair of mental disorder') +
scale_x_log10() +
theme_classic() +
theme(
legend.position="none",
axis.line.y = element_blank()
)
data <- read.table("data.csv", header=T, sep=",")
don = data %>%
arrange(HR) %>%
mutate(HR_rounded = round(HR/0.2)*0.2 ) %>%
mutate(y=ave(HR_rounded, HR_rounded, FUN=seq_along))
don %>% head
# Max tot
milieu = max( don$y, na.rm=T) / 2
milieu
# Max of each category?
tmp <- don %>% group_by(HR_rounded) %>% summarize(nbObs=n())
tmp
don <- merge(don, tmp, by.x="HR_rounded", by.y="HR_rounded")
don
tmp
# Step 1: compute position for dotplot histogram
data <- read.table("data.csv", header=T, sep=",")
don = data %>%
arrange(HR) %>%
mutate(HR_rounded = round(HR/0.2)*0.2 ) %>%
mutate(y=ave(HR_rounded, HR_rounded, FUN=seq_along))
don %>% head
# Max tot
milieu = max( don$y, na.rm=T) / 2
# Max of each category?
tmp <- don %>% group_by(HR_rounded) %>% summarize(nbObs=n())
tmp
don <- merge(don, tmp, by.x="HR_rounded", by.y="HR_rounded")
don
don <- don %>% mutate( yPrim = milieu - nbObs + y )
don %>% head
ggplot(don, aes(x=HR_rounded, y=yPrim) ) +
geom_point( size=2, color="blue" ) +
xlab('Hazard Ratio') +
ylab('Number of pair of mental disorder') +
scale_x_log10() +
theme_classic() +
theme(
legend.position="none",
axis.line.y = element_blank()
)
ggplot(don, aes(x=HR_rounded, y=yPrim) ) +
geom_point( size=2, color="blue" ) +
xlab('Hazard Ratio') +
ylab('Number of pair of mental disorder') +
scale_x_log10() +
theme_classic()
ggplot(don, aes(x=HR_rounded, y=yPrim) ) +
geom_point( size=2, color="blue" ) +
xlab('Hazard Ratio') +
ylab('Number of pair of mental disorder') +
scale_x_log10()
don %>% head
don %>% head(30)
max( don$y, na.rm=T)
don %>% head(100)
# Step 1: compute position for dotplot histogram
data <- read.table("data.csv", header=T, sep=",")
don = data %>%
arrange(HR) %>%
mutate(HR_rounded = round(HR/0.2)*0.2 ) %>%
mutate(y=ave(HR_rounded, HR_rounded, FUN=seq_along))
don %>% head
# Max tot
milieu = max( don$y, na.rm=T) / 2
# Max of each category?
tmp <- don %>% group_by(HR_rounded) %>% summarize(nbObs=n())
tmp
don <- merge(don, tmp, by.x="HR_rounded", by.y="HR_rounded")
don
don <- don %>% mutate( yPrim = milieu - nbObs/2 + y )
don %>% head(100)
ggplot(don, aes(x=HR_rounded, y=yPrim) ) +
geom_point( size=2, color="blue" ) +
xlab('Hazard Ratio') +
ylab('Number of pair of mental disorder') +
scale_x_log10()
# Step 1: compute position for dotplot histogram
data <- read.table("data.csv", header=T, sep=",")
don = data %>%
arrange(HR) %>%
mutate(HR_rounded = round(HR/0.2)*0.2 ) %>%
mutate(y=ave(HR_rounded, HR_rounded, FUN=seq_along))
don %>% head
# Max tot
milieu = round( max( don$y, na.rm=T) / 2 )
# Max of each category?
tmp <- don %>% group_by(HR_rounded) %>% summarize(nbObs=n())
tmp
don <- merge(don, tmp, by.x="HR_rounded", by.y="HR_rounded")
don
don <- don %>% mutate( yPrim = milieu - nbObs/2 + y )
don %>% head(100)
ggplot(don, aes(x=HR_rounded, y=yPrim) ) +
geom_point( size=2, color="blue" ) +
xlab('Hazard Ratio') +
ylab('Number of pair of mental disorder') +
scale_x_log10()
# Step 1: compute position for dotplot histogram
data <- read.table("data.csv", header=T, sep=",")
don = data %>%
arrange(HR) %>%
mutate(HR_rounded = round(HR/0.2)*0.2 ) %>%
mutate(y=ave(HR_rounded, HR_rounded, FUN=seq_along))
don %>% head
# Max tot
milieu = round( max( don$y, na.rm=T) / 2 ) + 0.5
# Max of each category?
tmp <- don %>% group_by(HR_rounded) %>% summarize(nbObs=n())
tmp
don <- merge(don, tmp, by.x="HR_rounded", by.y="HR_rounded")
don
don <- don %>% mutate( yPrim = milieu - nbObs/2 + y )
don %>% head(100)
ggplot(don, aes(x=HR_rounded, y=yPrim) ) +
geom_point( size=2, color="blue" ) +
xlab('Hazard Ratio') +
ylab('Number of pair of mental disorder') +
scale_x_log10()
milieu
# Step 1: compute position for dotplot histogram
data <- read.table("data.csv", header=T, sep=",")
don = data %>%
arrange(HR) %>%
mutate(HR_rounded = round(HR/0.2)*0.2 ) %>%
mutate(y=ave(HR_rounded, HR_rounded, FUN=seq_along))
don %>% head
# Max tot
milieu = round( max( don$y, na.rm=T) / 2 ) + 0.5
# Max of each category?
tmp <- don %>% group_by(HR_rounded) %>% summarize(nbObs=n())
tmp
don <- merge(don, tmp, by.x="HR_rounded", by.y="HR_rounded")
don
don <- don %>% mutate( yPrim = milieu - round(nbObs/2) + y )
don %>% head(100)
ggplot(don, aes(x=HR_rounded, y=yPrim) ) +
geom_point( size=2, color="blue" ) +
xlab('Hazard Ratio') +
ylab('Number of pair of mental disorder') +
scale_x_log10()
# Write result
write.table(don, file='data_test.csv', row.names=F, quote=F, sep=",")
don
# Step 1: compute position for dotplot histogram
data <- read.table("data.csv", header=T, sep=",")
don = data %>%
arrange(HR) %>%
mutate(HR_rounded = round(HR/0.3)*0.3 ) %>%
mutate(y=ave(HR_rounded, HR_rounded, FUN=seq_along))
don %>% head
# Max tot
milieu = round( max( don$y, na.rm=T) / 2 ) + 0.5
# Max of each category?
tmp <- don %>% group_by(HR_rounded) %>% summarize(nbObs=n())
tmp
don <- merge(don, tmp, by.x="HR_rounded", by.y="HR_rounded")
don
don <- don %>% mutate( yPrim = milieu - round(nbObs/2) + y )
don %>% head(100)
ggplot(don, aes(x=HR_rounded, y=yPrim) ) +
geom_point( size=2, color="blue" ) +
xlab('Hazard Ratio') +
ylab('Number of pair of mental disorder') +
scale_x_log10()
# Write result
write.table(don, file='data_test.csv', row.names=F, quote=F, sep=",")
# Write result
write.table(don, file='/Users/y.holtz/Documents/d3-graph-gallery/DATA/QBI/data_test.csv', row.names=F, quote=F, sep=",")
